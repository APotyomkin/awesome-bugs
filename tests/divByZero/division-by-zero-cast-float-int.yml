title: Division by zero in a cast from float to int
description: >
  Division by zero occurs when casting a non-zero
  float number in range (0:0.5) to zero.
features:
  - object
  - method
  - cast
language: cpp
bad:
  source.cpp: |
    #include <iostream>

    class A {
    public:
        auto doSomething(float v) const -> int {
            return 10 / static_cast<int>(v);
        }
    };

    auto main() -> int {
        A a;
        std::cout << a.doSomething(0.1F);
    }
  Test.java: |
    class A {
        public int doSomething(float v) {
            return 10 / (int)v;
        }
    }

    public class Test {
        public static void main(String[] args) {
            A a = new A();
            System.out.println(a.doSomething(0.1F));
        }
    }
  test.eo: |
    [] > test
      [self v] > doSomething
        div. > @
          10
          v.as-int
good:
  source.cpp: |
    #include <iostream>

    class A {
    public:
        auto doSomething(float v) const -> int {
            auto intV = static_cast<int>(v);
            return false ? (10 / intV) : (10 * intV);
        }
    };

    auto main() -> int {
        A a;
        std::cout << a.doSomething(0.1F);
    }
  Test.java: |
    class A {
        public int doSomething(float v) {
            int intV = (int)v;
            return false ? (10 / intV) : (10 * intV);
        }
    }

    public class Test {
        public static void main(String[] args) {
            A a = new A();
            System.out.println(a.doSomething(0.1F));
        }
    }
  test.eo: |
    [] > test
      [self v] > doSomething
        v.as-int > intV
        if. > @
          FALSE
          10.div intV
          10.mul intV
