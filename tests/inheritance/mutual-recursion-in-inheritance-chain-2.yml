title: Mutual recursion in a chain of inheritance
description: >
  Mutual recursion occurs in the inheritance chain when overriding
  a method m in the last inherited class in the chain
features:
  - inheritance
  - overriding
  - method
  - polymorphism
language: cpp
bad:
  source.cpp: |
    class Base {
    public:
        int x;

        Base() {
            this->x = 0;
        }
        virtual ~Base() {}

        virtual void n(int v) {
            this->x = v;
        }
        void m(int v) {
            this->n(v);
        }
    };

    class Derived : public Base {};

    class DerivedAgain : public Derived {
    public:
        virtual void n(int v) override {
            this->m(v);
        }
    };

    int main() {
        Base *derivedAgainInstance = new DerivedAgain();
        derivedAgainInstance->m(12);
        delete derivedAgainInstance;
    }
  test.eo: |
    [] > test
      [] > base
        memory > x
        [self v] > n
          x.write v > @
        [self v] > m
          self.n self v > @

      [] > derived
        test.base > @

      [] > derived_again
        test.derived > @
        [self v] > n
          self.m self v > @
good:
  source.cpp: |
    class Base {
    public:
        int x;

        Base() {
            this->x = 0;
        }
        virtual ~Base() {}

        void n(int v) {
            this->x = v;
        }
        void m(int v) {
            this->n(v);
        }
    };

    class Derived : public Base {};

    class DerivedAgain : public Derived {
    public:
        virtual void n(int v) {
            this->m(v);
        }
    };

    int main() {
        Base *derivedAgainInstance = new DerivedAgain();
        derivedAgainInstance->m(12);
        delete derivedAgainInstance;
    }
  test.eo: |
    [] > test
      [] > base
        memory > x
        [self v] > n
          x.write v > @
        [self v] > m
          self.n self v > @

      [] > derived
        test.base > @

      [] > derived_again
        test.derived > @
        [self v] > n1
          self.m self v > @
