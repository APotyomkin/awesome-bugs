% Encoding: UTF-8
@misc{eolang-paper,
  title={EOLANG and phi-calculus},
  author={Yegor Bugayenko},
  year={2021},
  eprint={2111.13384},
  archivePrefix={arXiv},
  primaryClass={cs.PL}
}

@article{eolang-far,
    author = {Yegor {Bugayenko}},
    title = {Finding a {Reverse} ({F}a{R}): {Bug} {Detection} in {Object}-{Oriented} {Programs}},
    year = {2021}
}

@inproceedings{MikhajlovSekerinski1998, author = {Mikhajlov, Leonid and Sekerinski, Emil}, title = {A Study of The Fragile Base Class Problem}, year = {1998}, isbn = {3540647376}, publisher = {Springer-Verlag}, address = {Berlin, Heidelberg}, booktitle = {Proceedings of the 12th European Conference on Object-Oriented Programming}, pages = {355–382}, numpages = {28}, series = {ECCOP '98} }

@article{KudasovShilovStepanov2021,
  author = {Nikolai {Kudasov} and Nikolay {Shilov} and Maxim {Stepanov}},
  title = {{Detecting unanticipated mutual recursion using Elegant Objects representation of object-oriented programs}},
  year = {2021}
}

@misc{bugayenko2021reducing,
      title={Reducing Programs to Objects},
      author={Yegor Bugayenko},
      year={2021},
      eprint={2112.11988},
      archivePrefix={arXiv},
      primaryClass={cs.PL}
}

@article{KudasovSim2022,
  author = {Nikolai {Kudasov} and Violetta {Sim}},
  title = {{Detecting unjustified assumptions in subclasses via elegant objects representation}},
  year = {2022}
}

@inproceedings{ScalaSMT,
author = {Cassez, Franck and Sloane, Anthony M.},
title = {ScalaSMT: Satisfiability modulo Theory in Scala (Tool Paper)},
year = {2017},
isbn = {9781450355292},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3136000.3136004},
doi = {10.1145/3136000.3136004},
abstract = { Satisfiability modulo theory (SMT) consists of determining the satisfiability of logical formulas. It can reason in various formal theories, e.g., in linear integer or real arithmetic, first-order logic, or logics of arrays. An SMT solver is a program that implements the corresponding algorithms to automatically determine whether a logical formula is satisfiable.  The SMTLIB initiative provides a common input and output format based on S-expressions for interacting with SMT solvers. We present ScalaSMT, a Scala library that provides an abstraction over the SMTLIB format. The library brings consistency and type safety to the textual and dynamically typed world of SMTLIB solver interaction.  ScalaSMT relies on the SMTLIB input/output capabilities of the solvers and consequently provides access to numerous popular SMTLIB-compliant solvers such as Z3, CVC4, Yices, MathSat5 or SMTinterpol.  ScalaSMT is easily extendable (SMTLIB commands and theories can be added) and configurable (SMTLIB-compliant solvers can be added). ScalaSMT fills a gap in the Scala library landscape by providing support for powerful logical reasoning algorithms. },
booktitle = {Proceedings of the 8th ACM SIGPLAN International Symposium on Scala},
pages = {51–55},
numpages = {5},
keywords = {Scala, SMT solvers, logics},
location = {Vancouver, BC, Canada},
series = {SCALA 2017}
}

@InProceedings{Z3,
author="de Moura, Leonardo
and Bj{\o}rner, Nikolaj",
editor="Ramakrishnan, C. R.
and Rehof, Jakob",
title="Z3: An Efficient SMT Solver",
booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
year="2008",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="337--340",
abstract="Satisfiability Modulo Theories (SMT) problem is a decision problem for logical first order formulas with respect to combinations of background theories such as: arithmetic, bit-vectors, arrays, and uninterpreted functions. Z3 is a new and efficient SMT Solver freely available from Microsoft Research. It is used in various software verification and analysis applications.",
isbn="978-3-540-78800-3"
}



@online{Kubuszok2019,
  author="Kubuszok, Mateusz",
  title = {{AST playground: recursion schemes and recursive data}},
  year = 2019,
  url = {https://kubuszok.com/2019/ast-playground-recursion-schemes-and-recursive-data/},
  urldate = {2022-03-07}
}